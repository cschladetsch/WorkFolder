#!/bin/bash
#
# Remember to export functions at the end,
# if you wish them to be used outside of this script.

export WORK_VERBOSE=1

lint() {
	cpplint --filter=-build/include_order,-readability/utf8,-whitespace/indent,-whitespace/line_length,-runtime/references $*
}

#
# Condtionally echo
#
echo_verbose()
{
    if [ $WORK_VERBOSE -ge "$1" ]; then
        shift
        echo -e "$*"
    fi
}

#
# Echo the root folder of the current repo.
#
function current_repo()
{
    cur=`pwd`
    result=$cur
    while [ ! -d .git ]; do
        cd ..
        result=`pwd`
        if [ `pwd` == "/" ]; then
            result=""
            break
        fi
    done
    echo $result
    cd $cur
}

statuscs()
{
    cmd='status.impl.exe $*'
    eval $cmd
}

#
# Go to a repository.
# 
# If no arguments are given, a list of repos
# is shown to select from. God help you if you
# have more than 9 repos.
#
# If an argument is given, it is interpreted as
# a repo number.
#
# The current directory is saved and restored as
# you switch between repos in `current_repo`.current.
#
go()
{
    if [ -z "$*" ]; then
        go.impl.exe
        return 0
    fi
    cmd="go.impl.exe $*"
    eval $cmd 1> /$WORK_LETTER/tmp/next 2> /$WORK_LETTER/tmp/transist
    transist=`cat /$WORK_LETTER/tmp/transist`
    next=`cat /$WORK_LETTER/tmp/next`

    cd "$next"

    arr=($transist)
    for f in "${arr[@]}"; do
       [[ -f $f ]] && . $f --source-only || echo "$f not found."
    done
}

#
# Goto root of current repo
#
gor()
{
    cd `current_repo`
}

#
# Git Add, Commit and Push
#
gacp()
{
    if [ "$*" == "" ]; then
        # TODO: use vi to make a message
        echo "Need commit message"
        exit 1
    fi
    git add -A
    git commit -m "$*"
    git push
}

#
# Show the end of the current Unity3d log
#
unity_log()
{
    tail $* ~/AppData/Local/Unity/Editor/Editor.log
}

#
# Should probably be an alias.
#
f()
{
    find . -name $*
}

#
# Show help
#
help()
{
    start $WORK_DIR/doc/Readme.md
}

first()
{
    cd `find . $2 -name $1 -print -quit`
}

# Export functions
export gacp f help unity_log go statuscs first

#echo_verbose 2 "...functions"

