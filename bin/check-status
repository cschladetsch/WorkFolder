#!/bin/bash

# Check status of each repo 

repos=`find . -maxdepth 1 -type d`
cur=`pwd`
unchangedRepos=()
echo

print()
{
	echo -e "\e[0;$2$1"
}

divider()
{
	print "━━━━━━━━━━━━━━━━━━━━━━━━━━" "37m"
}

add_files()
{
	echo
	print "--- Staging files." "182m"
	git add *
}

push_files()
{
	echo
	print "--- Pushing changes." "182m"
	git push
}

commit_files()
{
	echo
	print "--- Committing files." "182m"
	git commit -m "$1"
}

noChangeFormat="1;92m"
changedFormat="1;96m"


add=false
commit=false
push=false

message=""

while getopts ":acpm:" opt;
do
	case $opt in
		a )
			add=true
			print "＋ Will stage files." "2m"
			;;
		c )
			commit=true
			print "＋ Will commit files." "2m"
			;;
		p )
			push=true
			print "＋ Will push files to current branch." "2m"
			;;
		m )
			if [ commit == false ]
			then
				echo "Not commit, message will be ignored."
				break
			fi
			message=$OPTARG
			print "→ Commit message: $message" "2m"
			;;
		\? )
          print "− Invalid Option: -$OPTARG" "31m"
          exit 1
          ;;
        : )
          print "− Invalid Option: -$OPTARG requires an argument" "31m"
          exit 1
          ;;
	esac
done

divider
for var in $repos
do
	cd "$var"
	if [ -d .git ]
	then
		changes=`git diff-index --quiet HEAD --`
		result=`git status -s`
		name="`basename $var`"
		if [ $name == "." ]
		then
			name="`basename $cur`"
		fi
		if [ "$result" != "" ]
		then
			print "> $name: Out of date" $changedFormat
			git status -sb
			if [ $add == true ]
			then
				add_files
			fi
			if [ $commit == true ]
			then
				commit_files $message
			fi
			if [ $push == true ]
			then
				push_files
			fi
			divider
		else
			unchangedRepos+=($var)
		fi
	fi
	cd $cur
done

print "${#unchangedRepos[@]} repos are up to date." $noChangeFormat
for var in ${unchangedRepos[@]};
do

	name="`basename $var`"
		if [ $name == "." ]
		then
			name="`basename $cur`"
		fi
	print "	> $name" "0m"
done

